/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@webcontainer/api/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebContainer: () => (/* binding */ WebContainer)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ \"./node_modules/@webcontainer/api/dist/util.js\");\n/* harmony import */ var _vendor_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vendor/index.js */ \"./node_modules/@webcontainer/api/dist/vendor/index.js\");\n/**\n * The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.\n *\n * Its main entrypoint is the {@link WebContainer} class.\n *\n * @packageDocumentation\n */\n\n\nconst DEFAULT_IFRAME_SOURCE = 'https://stackblitz.com/headless';\nlet bootPromise = null;\nlet booted = false;\nlet destroyed = false;\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\n/**\n * The main export of this library. An instance of `WebContainer` represents a runtime\n * ready to be used.\n */\nclass WebContainer {\n  _instance;\n  _runtimeInfo;\n  _iframe;\n  /**\n   * Gives access to the underlying file system.\n   */\n  fs;\n  /** @internal */\n  constructor( /** @internal */\n  _instance, fs, /** @internal */\n  _runtimeInfo, /** @internal */\n  _iframe) {\n    this._instance = _instance;\n    this._runtimeInfo = _runtimeInfo;\n    this._iframe = _iframe;\n    this.fs = new FileSystemAPIClient(fs);\n  }\n  async spawn(command, optionsOrArgs, options) {\n    let args = [];\n    if (Array.isArray(optionsOrArgs)) {\n      args = optionsOrArgs;\n    } else {\n      options = optionsOrArgs;\n    }\n    let stream = new ReadableStream();\n    let output = undefined;\n    if (options?.output !== false) {\n      stream = new ReadableStream({\n        start(controller) {\n          output = item => controller.enqueue(item);\n        }\n      });\n    }\n    const wrapped = proxyListener(optionalBinaryListener(output));\n    const process = await this._instance.run({\n      command,\n      args,\n      env: options?.env,\n      terminal: options?.terminal\n    }, undefined, undefined, wrapped);\n    return new WebContainerProcessImpl(process, stream);\n  }\n  on(event, listener) {\n    let tornDown = false;\n    let unsubscribe = () => {};\n    const wrapped = (...args) => {\n      if (tornDown) {\n        return;\n      }\n      listener(...args);\n    };\n    this._instance.on(event, _vendor_index_js__WEBPACK_IMPORTED_MODULE_1__.Comlink.proxy(wrapped)).then(_unsubscribe => {\n      unsubscribe = _unsubscribe;\n      if (tornDown) {\n        unsubscribe();\n      }\n    });\n    return () => {\n      tornDown = true;\n      unsubscribe();\n    };\n  }\n  /**\n   * Mounts a tree of files into the filesystem.\n   *\n   * @param tree\n   * @param options.mountPoint - Specifies a nested path where the tree should be mounted.\n   */\n  mount(tree, options) {\n    const payload = encoder.encode(JSON.stringify((0,_util_js__WEBPACK_IMPORTED_MODULE_0__.formatFileSystemTree)(tree)));\n    return this._instance.loadFiles(_vendor_index_js__WEBPACK_IMPORTED_MODULE_1__.Comlink.transfer(payload, [payload.buffer]), {\n      mountPoints: options?.mountPoint\n    });\n  }\n  /**\n   * The default value of the `PATH` environment variable for processes started through {@link spawn}.\n   */\n  get path() {\n    return this._runtimeInfo.path;\n  }\n  /**\n   * The full path to the working directory (see {@link FileSystemAPI}).\n   */\n  get workdir() {\n    return this._runtimeInfo.cwd;\n  }\n  /**\n   * Destroys the WebContainer instance and releases its resources.\n   */\n  teardown() {\n    if (destroyed) {\n      throw new Error('WebContainer already torn down');\n    }\n    destroyed = true;\n    this.fs._teardown();\n    this._instance.teardown();\n    this._instance[_vendor_index_js__WEBPACK_IMPORTED_MODULE_1__.Comlink.releaseProxy]();\n    this._iframe.remove();\n  }\n  /**\n   * Boots a WebContainer. Only a single instance of WebContainer can be booted.\n   */\n  static async boot(options = {}) {\n    const {\n      workdirName\n    } = options;\n    if (workdirName?.includes('/') || workdirName === '..' || workdirName === '.') {\n      throw new Error('workdirName should be a valid folder name');\n    }\n    // try to \"acquire the lock\", i.e. wait for any ongoing boot request to finish\n    while (bootPromise) {\n      await bootPromise;\n    }\n    if (booted) {\n      throw new Error('WebContainer already booted');\n    }\n    const instancePromise = unsynchronizedBoot(options);\n    // the \"lock\" is a promise for the ongoing boot that never fails\n    bootPromise = instancePromise.catch(() => {});\n    try {\n      const instance = await instancePromise;\n      booted = true;\n      return instance;\n    } finally {\n      // release the \"lock\"\n      bootPromise = null;\n    }\n  }\n}\nconst DIR_ENTRY_TYPE_FILE = 1;\nconst DIR_ENTRY_TYPE_DIR = 2;\n/**\n * @internal\n */\nclass DirEntImpl {\n  name;\n  _type;\n  constructor(name, _type) {\n    this.name = name;\n    this._type = _type;\n  }\n  isFile() {\n    return this._type === DIR_ENTRY_TYPE_FILE;\n  }\n  isDirectory() {\n    return this._type === DIR_ENTRY_TYPE_DIR;\n  }\n}\n/**\n * @internal\n */\nclass WebContainerProcessImpl {\n  _process;\n  output;\n  input;\n  constructor(_process, output) {\n    this._process = _process;\n    this.output = output;\n    this.input = new WritableStream({\n      write: data => {\n        // this promise is not supposed to fail anyway\n        this._process.write(data).catch(() => {});\n      }\n    });\n  }\n  get exit() {\n    return this._process.onExit;\n  }\n  kill() {\n    this._process.kill();\n  }\n  resize(dimensions) {\n    this._process.resize(dimensions);\n  }\n}\n/**\n * @internal\n */\nclass FileSystemAPIClient {\n  _fs;\n  constructor(fs) {\n    this._fs = fs;\n  }\n  rm(...args) {\n    return this._fs.rm(...args);\n  }\n  async readFile(path, encoding) {\n    return await this._fs.readFile(path, encoding);\n  }\n  async writeFile(path, data, options) {\n    if (data instanceof Uint8Array) {\n      const buffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n      data = _vendor_index_js__WEBPACK_IMPORTED_MODULE_1__.Comlink.transfer(new Uint8Array(buffer), [buffer]);\n    }\n    await this._fs.writeFile(path, data, options);\n  }\n  async readdir(path, options) {\n    const result = await this._fs.readdir(path, options);\n    if (isStringArray(result)) {\n      return result;\n    }\n    if (isTypedArrayCollection(result)) {\n      return result;\n    }\n    const entries = result.map(entry => new DirEntImpl(entry.name, entry['Symbol(type)']));\n    return entries;\n  }\n  async mkdir(path, options) {\n    return await this._fs.mkdir(path, options);\n  }\n  /**\n   * @internal\n   */\n  _teardown() {\n    this._fs[_vendor_index_js__WEBPACK_IMPORTED_MODULE_1__.Comlink.releaseProxy]();\n  }\n}\nasync function unsynchronizedBoot(options) {\n  const {\n    iframe,\n    serverPromise\n  } = serverFactory(options);\n  const server = await serverPromise;\n  const instance = await server.build({\n    host: window.location.host,\n    version: \"1.1.3\",\n    workdirName: options.workdirName\n  });\n  const fs = await instance.fs();\n  const runtimeInfo = await instance.runtimeInfo();\n  server[_vendor_index_js__WEBPACK_IMPORTED_MODULE_1__.Comlink.releaseProxy]();\n  return new WebContainer(instance, fs, runtimeInfo, iframe);\n}\nfunction optionalBinaryListener(listener) {\n  if (listener == null) {\n    return undefined;\n  }\n  return data => {\n    if (data instanceof Uint8Array) {\n      listener(decoder.decode(data));\n    }\n  };\n}\nfunction proxyListener(listener) {\n  if (listener == null) {\n    return undefined;\n  }\n  return _vendor_index_js__WEBPACK_IMPORTED_MODULE_1__.Comlink.proxy(listener);\n}\nfunction serverFactory(options) {\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.setAttribute('allow', 'cross-origin-isolated');\n  const url = getIframeUrl();\n  url.searchParams.set('version', \"1.1.3\");\n  if (options.coep) {\n    url.searchParams.set('coep', options.coep);\n  }\n  iframe.src = url.toString();\n  const {\n    origin\n  } = url;\n  const promise = new Promise(resolve => {\n    const onMessage = event => {\n      if (event.origin !== origin) {\n        return;\n      }\n      const {\n        data\n      } = event;\n      if (data.type === 'init') {\n        resolve(_vendor_index_js__WEBPACK_IMPORTED_MODULE_1__.Comlink.wrap(event.ports[0]));\n        return;\n      }\n      if (data.type === 'warning') {\n        console[data.level].call(console, data.message);\n        return;\n      }\n    };\n    window.addEventListener('message', onMessage);\n  });\n  document.body.insertBefore(iframe, null);\n  return {\n    iframe,\n    serverPromise: promise\n  };\n}\nfunction isStringArray(list) {\n  return typeof list[0] === 'string';\n}\nfunction isTypedArrayCollection(list) {\n  return list[0] instanceof Uint8Array;\n}\nfunction getIframeUrl() {\n  return new URL(window.WEBCONTAINER_API_IFRAME_URL ?? DEFAULT_IFRAME_SOURCE);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@webcontainer/api/dist/index.js?");

/***/ }),

/***/ "./node_modules/@webcontainer/api/dist/util.js":
/*!*****************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/util.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatFileSystemTree: () => (/* binding */ formatFileSystemTree)\n/* harmony export */ });\n/**\n * @internal\n */\nfunction formatFileSystemTree(tree) {\n  const newTree = {\n    d: {}\n  };\n  for (const name of Object.keys(tree)) {\n    const entry = tree[name];\n    if ('file' in entry) {\n      const contents = entry.file.contents;\n      const stringContents = typeof contents === 'string' ? contents : binaryString(contents);\n      const binary = typeof contents === 'string' ? {} : {\n        b: true\n      };\n      newTree.d[name] = {\n        f: {\n          c: stringContents,\n          ...binary\n        }\n      };\n      continue;\n    }\n    const newEntry = formatFileSystemTree(entry.directory);\n    newTree.d[name] = newEntry;\n  }\n  return newTree;\n}\nfunction binaryString(bytes) {\n  let result = '';\n  for (const byte of bytes) {\n    result += String.fromCharCode(byte);\n  }\n  return result;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@webcontainer/api/dist/util.js?");

/***/ }),

/***/ "./node_modules/@webcontainer/api/dist/vendor/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@webcontainer/api/dist/vendor/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Comlink: () => (/* binding */ comlink_exports)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\n// dist/vendor/comlink.js\nvar comlink_exports = {};\n__export(comlink_exports, {\n  createEndpoint: () => createEndpoint,\n  expose: () => expose,\n  proxy: () => proxy,\n  proxyMarker: () => proxyMarker,\n  releaseProxy: () => releaseProxy,\n  transfer: () => transfer,\n  transferHandlers: () => transferHandlers,\n  windowEndpoint: () => windowEndpoint,\n  wrap: () => wrap\n});\n\n// ../../node_modules/comlink/dist/esm/comlink.mjs\nvar proxyMarker = Symbol(\"Comlink.proxy\");\nvar createEndpoint = Symbol(\"Comlink.endpoint\");\nvar releaseProxy = Symbol(\"Comlink.releaseProxy\");\nvar throwMarker = Symbol(\"Comlink.thrown\");\nvar isObject = val => typeof val === \"object\" && val !== null || typeof val === \"function\";\nvar proxyTransferHandler = {\n  canHandle: val => isObject(val) && val[proxyMarker],\n  serialize(obj) {\n    const {\n      port1,\n      port2\n    } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  }\n};\nvar throwTransferHandler = {\n  canHandle: value => isObject(value) && throwMarker in value,\n  serialize({\n    value\n  }) {\n    let serialized;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack\n        }\n      };\n    } else {\n      serialized = {\n        isError: false,\n        value\n      };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(new Error(serialized.value.message), serialized.value);\n    }\n    throw serialized.value;\n  }\n};\nvar transferHandlers = /* @__PURE__ */new Map([[\"proxy\", proxyTransferHandler], [\"throw\", throwTransferHandler]]);\nfunction expose(obj, ep = self) {\n  ep.addEventListener(\"message\", function callback(ev) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const {\n      id,\n      type,\n      path\n    } = Object.assign({\n      path: []\n    }, ev.data);\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj2, prop) => obj2[prop], obj);\n      const rawValue = path.reduce((obj2, prop) => obj2[prop], obj);\n      switch (type) {\n        case 0:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case 1:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case 2:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case 3:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case 4:\n          {\n            const {\n              port1,\n              port2\n            } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case 5:\n          {\n            returnValue = void 0;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = {\n        value,\n        [throwMarker]: 0\n      };\n    }\n    Promise.resolve(returnValue).catch(value => {\n      return {\n        value,\n        [throwMarker]: 0\n      };\n    }).then(returnValue2 => {\n      const [wireValue, transferables] = toWireValue(returnValue2);\n      ep.postMessage(Object.assign(Object.assign({}, wireValue), {\n        id\n      }), transferables);\n      if (type === 5) {\n        ep.removeEventListener(\"message\", callback);\n        closeEndPoint(ep);\n      }\n    });\n  });\n  if (ep.start) {\n    ep.start();\n  }\n}\nfunction isMessagePort(endpoint) {\n  return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\nfunction wrap(ep, target) {\n  return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\nfunction createProxy(ep, path = [], target = function () {}) {\n  let isProxyReleased = false;\n  const proxy2 = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: 5,\n            path: path.map(p => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return {\n            then: () => proxy2\n          };\n        }\n        const r = requestResponseMessage(ep, {\n          type: 0,\n          path: path.map(p => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(ep, {\n        type: 1,\n        path: [...path, prop].map(p => p.toString()),\n        value\n      }, transferables).then(fromWireValue);\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if (last === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: 4\n        }).then(fromWireValue);\n      }\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 2,\n        path: path.map(p => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 3,\n        path: path.map(p => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    }\n  });\n  return proxy2;\n}\nfunction myFlat(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\n}\nvar transferCache = /* @__PURE__ */new WeakMap();\nfunction transfer(obj, transfers) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\nfunction proxy(obj) {\n  return Object.assign(obj, {\n    [proxyMarker]: true\n  });\n}\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\n  return {\n    postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\nfunction toWireValue(value) {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [{\n        type: 3,\n        name,\n        value: serializedValue\n      }, transferables];\n    }\n  }\n  return [{\n    type: 0,\n    value\n  }, transferCache.get(value) || []];\n}\nfunction fromWireValue(value) {\n  switch (value.type) {\n    case 3:\n      return transferHandlers.get(value.name).deserialize(value.value);\n    case 0:\n      return value.value;\n  }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n  return new Promise(resolve => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l);\n      resolve(ev.data);\n    });\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage(Object.assign({\n      id\n    }, msg), transfers);\n  });\n}\nfunction generateUUID() {\n  return new Array(4).fill(0).map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\");\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@webcontainer/api/dist/vendor/index.js?");

/***/ }),

/***/ "./src/files.js":
/*!**********************!*\
  !*** ./src/files.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   files: () => (/* binding */ files)\n/* harmony export */ });\n/** @satisfies {import('@webcontainer/api').FileSystemTree} */\n\nvar files = {\n  'get.http': {\n    file: {\n      contents: \"GET https://httpbin.org/get\"\n    }\n  },\n  'package.json': {\n    file: {\n      contents: \"\\n          {\\n            \\\"name\\\": \\\"example-app\\\",\\n            \\\"type\\\": \\\"module\\\",\\n            \\\"dependencies\\\": {\\n              \\\"httpyac\\\": \\\"latest\\\"\\n            },\\n            \\\"scripts\\\": {\\n              \\\"start\\\": \\\"nodemon index.js\\\"\\n            }\\n          }\"\n    }\n  }\n};\n\n//# sourceURL=webpack://my-webpack-project/./src/files.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _webcontainer_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @webcontainer/api */ \"./node_modules/@webcontainer/api/dist/index.js\");\n/* harmony import */ var _files_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./files.js */ \"./src/files.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n/** @type {import('@webcontainer/api').WebContainer}  */\nvar webcontainerInstance;\nwindow.addEventListener('load', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n  var exitCode;\n  return _regeneratorRuntime().wrap(function _callee$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        textareaEl.value = _files_js__WEBPACK_IMPORTED_MODULE_1__.files['get.http'].file.contents;\n\n        // Call only once\n        _context.next = 3;\n        return _webcontainer_api__WEBPACK_IMPORTED_MODULE_0__.WebContainer.boot();\n      case 3:\n        webcontainerInstance = _context.sent;\n        _context.next = 6;\n        return webcontainerInstance.mount(_files_js__WEBPACK_IMPORTED_MODULE_1__.files);\n      case 6:\n        _context.next = 8;\n        return installDependencies();\n      case 8:\n        exitCode = _context.sent;\n        if (!(exitCode !== 0)) {\n          _context.next = 11;\n          break;\n        }\n        throw new Error('Installation failed');\n      case 11:\n        textareaOutEl.value = \"\";\n        button.addEventListener('click', function (e) {\n          writeIndexJS(textareaEl.value);\n        });\n      case 13:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _callee);\n})));\nfunction installDependencies() {\n  return _installDependencies.apply(this, arguments);\n} // /**\n//  * @param {string} content\n//  */\nfunction _installDependencies() {\n  _installDependencies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var installProcess;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return webcontainerInstance.spawn('npm', ['install']);\n        case 2:\n          installProcess = _context2.sent;\n          installProcess.output.pipeTo(new WritableStream({\n            write: function write(data) {\n              console.log(data);\n            }\n          }));\n          // Wait for install command to exit\n          return _context2.abrupt(\"return\", installProcess.exit);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _installDependencies.apply(this, arguments);\n}\nfunction writeIndexJS(_x) {\n  return _writeIndexJS.apply(this, arguments);\n}\nfunction _writeIndexJS() {\n  _writeIndexJS = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(content) {\n    var installProcess;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return webcontainerInstance.fs.writeFile('/get.http', content);\n        case 2:\n          textareaOutEl.value = \"\";\n          _context3.next = 5;\n          return webcontainerInstance.spawn('httpyac', ['get.http', '-a', '-o none']);\n        case 5:\n          installProcess = _context3.sent;\n          installProcess.output.pipeTo(new WritableStream({\n            write: function write(data) {\n              textareaOutEl.value += data;\n            }\n          }));\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _writeIndexJS.apply(this, arguments);\n}\ndocument.querySelector('#app').innerHTML = \"\\n  <div class=\\\"container\\\">\\n    <div class=\\\"editor\\\">\\n      <textarea></textarea>\\n      <button type=\\\"button\\\">Execute</button>\\n    </div>\\n    <div class=\\\"output\\\">\\n      <textarea readonly>Loading....</textarea>\\n    </div>\\n  </div>\\n\";\n\n/** @type {HTMLTextAreaElement | null} */\nvar textareaEl = document.querySelector('textarea');\n\n/** @type {HTMLTextAreaElement | null} */\nvar textareaOutEl = document.querySelector('.output textarea');\n\n/** @type {HTMLTextAreaElement | null} */\nvar button = document.querySelector('button');\n\n//# sourceURL=webpack://my-webpack-project/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;